# Generated by Django 5.2.1 on 2025-05-25 03:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('piso', models.CharField(max_length=10)),
                ('area', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Consultorio',
                'verbose_name_plural': 'Consultorios',
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('acceso_directo', models.BooleanField(default=False, help_text='Si puede ser agendada sin derivación previa')),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombres', models.CharField(blank=True, max_length=100)),
                ('apellidos', models.CharField(blank=True, max_length=100)),
                ('dni', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('direccion', models.TextField(blank=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='core.rol')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmp', models.CharField(max_length=10, verbose_name='Código Médico Profesional')),
                ('especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicos', to='core.especialidad')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medico', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Médico',
                'verbose_name_plural': 'Médicos',
            },
        ),
        migrations.CreateModel(
            name='DisponibilidadMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(blank=True, choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')], null=True)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('tipo_turno', models.CharField(choices=[('mañana', 'Mañana'), ('tarde', 'Tarde'), ('noche', 'Noche'), ('guardia', 'Guardia')], max_length=10)),
                ('fecha_especial', models.DateField(blank=True, help_text='Si es para un día específico', null=True)),
                ('activo', models.BooleanField(default=True)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidades', to='core.medico')),
            ],
            options={
                'verbose_name': 'Disponibilidad Médica',
                'verbose_name_plural': 'Disponibilidades Médicas',
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('atendida', 'Atendida')], default='pendiente', max_length=10)),
                ('motivo', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asistio', models.BooleanField(blank=True, null=True)),
                ('fue_justificada', models.BooleanField(default=False)),
                ('motivo_no_asistencia', models.TextField(blank=True)),
                ('cita_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_seguimiento', to='core.cita')),
                ('reservado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_reservadas', to=settings.AUTH_USER_MODEL)),
                ('consultorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='core.consultorio')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='core.medico')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['fecha', 'hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('tipo', models.CharField(choices=[('confirmacion', 'Confirmación'), ('recordatorio', 'Recordatorio'), ('cancelacion', 'Cancelación'), ('advertencia', 'Advertencia'), ('informacion', 'Información')], max_length=15)),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('leido', models.BooleanField(default=False)),
                ('importante', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_envio'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faltas_consecutivas', models.PositiveIntegerField(default=0)),
                ('estado_reserva', models.CharField(choices=[('activo', 'Activo'), ('bloqueado', 'Bloqueado'), ('supervisado', 'Supervisado')], default='activo', max_length=20)),
                ('representante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='representados', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='HistorialMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('diagnostico', models.TextField()),
                ('tratamiento', models.TextField()),
                ('observaciones', models.TextField(blank=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiales', to='core.paciente')),
            ],
            options={
                'verbose_name': 'Historial Médico',
                'verbose_name_plural': 'Historiales Médicos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Derivacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_derivacion', models.DateField(auto_now_add=True)),
                ('motivo', models.TextField()),
                ('vigencia_dias', models.PositiveIntegerField(default=30)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('usada', 'Usada'), ('vencida', 'Vencida')], default='pendiente', max_length=10)),
                ('usada_en_cita', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derivacion_origen', to='core.cita')),
                ('especialidad_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivaciones_recibidas', to='core.especialidad')),
                ('medico_origen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivaciones_realizadas', to='core.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivaciones', to='core.paciente')),
            ],
            options={
                'verbose_name': 'Derivación',
                'verbose_name_plural': 'Derivaciones',
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='core.paciente'),
        ),
        migrations.CreateModel(
            name='TratamientoProgramado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostico', models.TextField()),
                ('cantidad_sesiones', models.PositiveIntegerField()),
                ('frecuencia_dias', models.PositiveIntegerField()),
                ('fecha_inicio', models.DateField()),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('terminado', 'Terminado'), ('cancelado', 'Cancelado')], default='activo', max_length=10)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tratamientos_programados', to='core.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tratamientos', to='core.paciente')),
            ],
            options={
                'verbose_name': 'Tratamiento Programado',
                'verbose_name_plural': 'Tratamientos Programados',
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='tratamiento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas', to='core.tratamientoprogramado'),
        ),
    ]
